# Button configuration syntax:
# buttonN='name # name of the button that must be placed in the uosc.conf (button:name) for the button to be shown
#         ,state_1 # name of the state, states with the same name in different buttons will be grouped together
#             @icon={icon_name}     # Optional, default icon for first state
#             :badge={badge_text}    # Optional, default badge for first state
#             :active={true/false}   # Optional, default active state
#             :tooltip={tooltip_text}# Optional, default tooltip
#             :command={command}     # Optional, default command
#         ,muted
#             @icon={icon_name}     # Optional, inherits from state_1 if not specified
#             :badge={badge_text}    # Optional, inherits from state_1 if not specified 
#             :active={true/false}   # Optional, inherits from state_1 if not specified
#             :tooltip={tooltip_text}# Optional, inherits from state_1 if not specified
#             :command={command}     # Optional, inherits from state_1 if not specified 

# Example:
# button1='example
#          ,state_1
#             @icon=exmample
#             :badge=nil
#             :active=false
#             :tooltip=Playlist/Files
#             :command=some command or script-message-to uosc
#          ,state_2
#             @icon=example_2
#             :badge=2
#             :active=true
#             :tooltip=example tooltip
#             :command=script-message-to uosc menu
#          ,state_8
#             @icon=example_3
#             :badge=3
#             :active=nil
#             :tooltip=example_3'
#
# button2='alt_control_loop
#          ,state_1
#             @icon=repeat
#             :active=[[loop-playlist]]
#             :tooltip=Loop playlist
#             :command=no-osd cycle-values loop-playlist no inf
#          ,state_2
#             @icon=repeat_one
#             :active=[[loop-file]]
#             :tooltip=Loop file
#             :command=no-osd cycle-values loop-file no inf'
#
# button3='alt_format
#          ,state_1
#             @badge=?(f)
#             :tooltip=some: [[video-codec]] text'
#
# button4='alt_resolution
#          ,state_1
#             @badge=: ?(p) :
#             :tooltip=[[video-params/w]]x[[video-params/h]]'
#
#
#   `{icon}` - parameter used to specify an icon name (example: `face`)
#              pick here: https://fonts.google.com/icons?icon.platform=web&icon.set=Material+Icons&icon.style=Rounded
#
#   `{badge}` - parameter used to specify a badge text (example: `2`), other than in uosc the text is static if not a propertie is used
#               it should not be too long or the formating will be broken, use gap in uosc.conf to fix it.
#
#   `{active}` - parameter used to specify if the button is active or not (white background), button will be active if the property is true.
#              - if the property is not existent, a new property will be created with the name and command will be used to set the state of the property
#
#   `{tooltip}` - parameter used to specify a tooltip text (example: `Tooltip`), other than in uosc the text is static if not a propertie is used
#                 it can be used too display longer text.
#
#   `{command}` - parameter used to specify a command(s) to execute when the button is pressed (example: `script-message-to uosc/menu-blurred`), 
#                 will be passed trough to uosc. string or string[]

# Special notations:
# [[property_name]] - References mpv properties https://mpv.io/manual/master/#property-list can be used in badge, active, tooltip to change them on the fly when the property changes.
# ?(p) - Special code for resolution display, uses res_translation to translate a resolution into a string. 
#        This obviously does not work if the media file hast no resolution and the visibility of the
#        button should be adjusted in uosc.conf (e.g.: <has_video>button:resolution)
# ?(f) - Special code for format display, return the media file type
# [[user-data/name?cycle-values]] - Generates a custom/new property, cycle-values can be like normal mpv cycle-values
#                                 - 'user-data/' and '?' are not optional
# ?(c) - Special code for state cycle display, returns the current state. Can also be used for command with ?(c) cycle to next state
#      - and ?(c-) cycle-back to previous state. Uses onnly states in state_cycle_map.

# Each buttonN must maintain consistent state sequence (eg. button1= button2= button3= buttonN=) 
# best way to do this is to write it in multiple lines like in the example and then ask chatgpt(or your flavour of llm) to format it into one line
button1=example,state_1@icon=exmample:badge=nil:active=false:tooltip=Playlist/Files:command=some command or script-message-to uosc,state_2@icon=example_2:badge=2:active=true:tooltip=example tooltip:command=script-message-to uosc menu,state_8@icon=example_3:badge=3:active=nil:tooltip=example_3

button2=alt_control_items,state_1@icon=list_alt:tooltip=Playlist/Files:command=script-message-to uosc items,state_2@tooltip=Files:command=script-message-to uosc open-file,state_3@icon=folder_open:tooltip=File Dialog:command=script-message-to uosc show-in-directory,fullscreen@icon=list_alt:tooltip=fullscreen:command=script-message-to uosc show-in-directory

button3=alt_control_loop,state_1@icon=repeat:active=[[loop-playlist]]:tooltip=Loop playlist:command=no-osd cycle-values loop-playlist no inf,state_2@icon=repeat_one:active=[[loop-file]]:tooltip=Loop file:command=no-osd cycle-values loop-file no inf

button4=alt_format,state_1@badge=?(f):tooltip=[[video-codec]]

button5=alt_resolution,state_1@badge=?(p):tooltip=[[video-params/w]]x[[video-params/h]]:command=script-message-to uosc stream-quality

button6=alt_shuffle,state_1@icon=shuffle:active=[[user-data/uosc_shuffle?no yes]]:tooltip=Shuffle:command=script-binding uosc/shuffle,state_2@icon=transform:tooltip=Shuffle Playlist:command=playlist-shuffle;script-message-to uosc flash-top-bar,state_3@icon=low_priority:tooltip=Unshuffle PLaylist:command=playlist-unshuffle

button7=alt_previous,state_1@icon=arrow_back_ios:tooltip=Previous:command=script-binding uosc/prev,state_2@tooltip=Previous Chapter:command=add chapter -1

button8=alt_next,state_1@icon=arrow_forward_ios:tooltip=Next:command=script-binding uosc/next,state_2@tooltip=Next Chapter:command=add chapter 1

button9=alt_cycle,state_1@icon=loop:tooltip=cycle states:badge=?(c):command=?(c)
  # inputevent is used  if you want to change a state as long as a key is held down
  # https://github.com/natural-harmonia-gropius/input-event
  # yes/no
use_inputevent=yes
  # delay to revert button state, if you want the updated state to be shown longer before switching to default state.
  # only need if inputevent is used
revert_delay=1

  # what modifier keys correspond to which state, holding down the right mouse button would change the buttons to the second state (state_2)
  # this will override any modifier_keys setting in input.conf automatically
  # only need if inputevent is used
  # state:key
modifier_keys=default:state_1,MBTN_RIGHT:state_2,MBTN_MID:state_3

# In case you want to cycle through the states or want to use ?(c) notation to show which state is active. 
# You don't need to include all states.
state_cycle_map=state_1,state_2,state_3
  
  # resolutions that should be translated into text (if ?(p) is used)
  # resolution:description
res_translation=1280x720:HDTV,1920x1080:FHD,2560x1440:QHD,3840x2160:4K,7680x4320:8K,5120x2880:5K,1024x768:XGA,1600x1200:UXGA,2048x1080:2K (DCI),4096x2160:4K (DCI),640x480:VGA,800x600:SVGA
  # media types is used to display the correct format lable (if ?(f) is used)
  # nicked from uosc.conf
video_types=3g2,3gp,asf,av1,avi,f4v,flv,h264,h265,m2ts,m4v,mkv,mov,mp4,mp4v,mpeg,mpg,ogm,ogv,rm,rmvb,ts,vob,webm,wmv,y4m
audio_types=aac,ac3,aiff,ape,au,cue,dsf,dts,flac,m4a,mid,midi,mka,mp3,mp4a,oga,ogg,opus,spx,tak,tta,wav,weba,wma,wv
image_types=apng,avif,bmp,gif,j2k,jp2,jfif,jpeg,jpg,jxl,mj2,png,svg,tga,tif,tiff,webp,jpeg_pipe
